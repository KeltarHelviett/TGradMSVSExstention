<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <configSections>
    <sectionGroup name="userSettings" type="System.Configuration.UserSettingsGroup, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" >
      <section name="TGradMSVSExtention.Properties.Settings" type="System.Configuration.ClientSettingsSection, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" allowExeDefinition="MachineToLocalUser" requirePermission="false" />
    </sectionGroup>
  </configSections>
  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="Newtonsoft.Json" publicKeyToken="30ad4fe6b2a6aeed" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-10.0.0.0" newVersion="10.0.0.0" />
      </dependentAssembly>
    </assemblyBinding>
  </runtime>
  <userSettings>
    <TGradMSVSExtention.Properties.Settings>
      <setting name="ModelFolder" serializeAs="String">
        <value />
      </setting>
      <setting name="ViewFolder" serializeAs="String">
        <value />
      </setting>
      <setting name="ViewModelFolder" serializeAs="String">
        <value />
      </setting>
      <setting name="DefaultModel" serializeAs="String">
        <value>using System.Diagnostics;

using DatumNode.Models;
using System.ComponentModel.DataAnnotations;

namespace %namespace%
{
    public class %classname%: Entity
    {
    }
}</value>
      </setting>
      <setting name="DefaultView" serializeAs="String">
        <value>namespace %namespace%
{
    public class %classname%
    {
    	public %classname%()
    	{
    		//InitializeComponent();
    	}
    }
}</value>
      </setting>
      <setting name="DefaultViewModel" serializeAs="String">
        <value>using DatumNode.ViewModels;

using %prefix%ViewModels;
using %prefix%Models.%classname%s;
using %prefix%Repository.%classname%s;

namespace %namespace%
{
    class %classname%sViewModel : ItemsViewModel&lt;%classname%, %classname%Filter&gt;
    {
        public %classname%sViewModel() : this(CommonMainViewModel.Resolve&lt;I%classname%Repository&gt;())
        {

        }

        public %classname%sViewModel(IRepository&lt;%classname%, %classname%Filter&gt; repository) : base(repository)
        {

        }

    }
}</value>
      </setting>
      <setting name="DefaultDetailViewModel" serializeAs="String">
        <value>using DatumNode.ViewModels;

using %prefix%Models.%classname%s;
using %prefix%Repository.%classname%s;

namespace %namespace%
{
	public class %classname%DetailViewModel : WorkspaceViewModel
	{

		 public %classname%DetailViewModel()
		 {

		 }

	}
}</value>
      </setting>
      <setting name="DefaultMasterViewModel" serializeAs="String">
        <value>using DatumNode.ViewModels;

using %prefix%Models.%classname%s;
using %prefix%Repository.%classname%s;

namespace %namespace%
{
	class %classname%sMasterViewModel : MasterDetailViewModel&lt;%classname%sViewModel, %classname%DetailViewModel&gt;
	{
	  
	}
}</value>
      </setting>
      <setting name="DatumNodeRepositoryFolder" serializeAs="String">
        <value />
      </setting>
      <setting name="RepositoryFolder" serializeAs="String">
        <value />
      </setting>
      <setting name="DefaultDatumNodeRepository" serializeAs="String">
        <value>using System;
using System.Collections.Generic;

using DatumNode.ViewModels;

using %prefix%Models.%classname%s;
using %prefix%Repository.%classname%s;

namespace %namespace%
{
	class %classname%sViewModel : ItemsView%classname%&lt;%classname%, %classname%Filter&gt;
	{
		 public %classname%sViewModel() : this(CommonMainViewModel.Resolve&lt;I%classname%Repository&gt;())
		 {

		 }
	}
}</value>
      </setting>
      <setting name="DefaultRepository" serializeAs="String">
        <value>using DatumNode.ViewModels;

using %prefix%Models.%classname%s;

namespace %namespace%
{
	public interface I%classname%Repository: IRepository&lt;%classname%, %classname%Filter&gt;
	{

	}
}</value>
      </setting>
      <setting name="DefaultModelFilter" serializeAs="String">
        <value>using System.Diagnostics;

using DatumNode.Models;
using System.ComponentModel.DataAnnotations;

namespace %namespace%
{
    public class %classname%Filter: Entity
    {
    }
}</value>
      </setting>
    </TGradMSVSExtention.Properties.Settings>
  </userSettings>
</configuration>